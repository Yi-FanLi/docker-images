name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: deepmd-kit
  VERSION: 1.3.2
  INSTALLER_VERSION: 

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - VARIANT: cpu
            BASE_IMAGE: ubuntu:focal
          - VARIANT: cuda10.1_gpu
            BASE_IMAGE: nvidia/cuda:10.1-base
          - VARIANT: cuda10.0_gpu
            BASE_IMAGE: nvidia/cuda:10.0-base
          - VARIANT: cuda9.2_gpu
            BASE_IMAGE: nvidia/cuda:9.2-base
    env: 
      VARIANT: ${{ matrix.VARIANT }}
      BASE_IMAGE: ${{ matrix.BASE_IMAGE }}

    steps:
      - uses: actions/checkout@v2

      - name: Run tests
        run: |
          docker build --build-arg VARIANT=$VARIANT --build-arg VERSION=$VERSION --build-arg INSTALLER_VERSION=$INSTALLER_VERSION --build-arg BASE_IMAGE=$BASE_IMAGE --file $IMAGE_NAME/Dockerfile .

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: test

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    strategy:
      matrix:
        include:
          - VARIANT: cpu
            BASE_IMAGE: ubuntu:focal
          - VARIANT: cuda10.1_gpu
            BASE_IMAGE: nvidia/cuda:10.1-base
          - VARIANT: cuda10.0_gpu
            BASE_IMAGE: nvidia/cuda:10.0-base
          - VARIANT: cuda9.2_gpu
            BASE_IMAGE: nvidia/cuda:9.2-base
    env: 
      VARIANT: ${{ matrix.VARIANT }}
      BASE_IMAGE: ${{ matrix.BASE_IMAGE }}

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build --build-arg VARIANT=$VARIANT --build-arg VERSION=$VERSION --build-arg INSTALLER_VERSION=$INSTALLER_VERSION --build-arg BASE_IMAGE=$BASE_IMAGE --file $IMAGE_NAME/Dockerfile -t ghcr.io/deepmodeling/${IMAGE_NAME}:${VERSION}_${VARIANT} -t deepmodeling/${IMAGE_NAME}:${VERSION}_${VARIANT} .

      - name: Log into GitHub Container Registry
      # TODO: Create a PAT with `read:packages` and `write:packages` scopes and save it as an Actions secret `CR_PAT`
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: docker push ghcr.io/deepmodeling/${IMAGE_NAME}:${VERSION}_${VARIANT}

      - name: Log into Dockerhub
        run: echo "${{ secrets.DOCKER_TOKEN }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Push image to Dockerhub
        run: docker push deepmodeling/${IMAGE_NAME}:${VERSION}_${VARIANT}
